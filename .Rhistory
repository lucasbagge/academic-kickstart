echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(scales)
library(tidyverse)
library(tidymodels)
library(dplyr)
library(magrittr)
attach(data)
data <- data %>%
mutate(InvoiceDate = as.Date(InvoiceDate))
data %>%
group_by(country) %>%
summarise(nr. = n())
data %>%
group_by(Country) %>%
summarise(nr. = n())
data %>%
group_by(Country) %>%
summarise(nr. = n()) %>%
arrange(nr.)
data %>%
group_by(Country) %>%
summarise(nr. = n()) %>%
arrange(desc(nr.))
data <- data %>%
filter(Country == "United Kingdom") %>%
mutate(InvoiceDate = as.Date(InvoiceDate))
data <- data %>%
filter(Country == "United Kingdom")
data <- read.csv("data_sales.csv")
data_uk <- data %>%
filter(Country == "United Kingdom")
mutate(InvoiceDate = as.Date(InvoiceDate, "%Y-%b-%d"))
data_uk <- data %>%
filter(Country == "United Kingdom") %>%
mutate(InvoiceDate = as.Date(InvoiceDate, "%Y-%b-%d"))
data_uk <- data %>%
filter(Country == "United Kingdom") %>%
mutate(InvoiceDate = as.Date(InvoiceDate, "%b/%d/%Y"))
data_uk <- data %>%
filter(Country == "United Kingdom") %>%
mutate(InvoiceDate = as.Date(InvoiceDate))
data_uk <- data %>%
filter(Country == "United Kingdom") %>%
mutate(InvoiceDate = as.Date(InvoiceDate, format = "%m/%d/%Y"))
data_uk <- data %>%
filter(Country == "United Kingdom")
data_uk <- data %>%
filter(Country == "United Kingdom") %>%
mutate(InvoiceDate = as.Date(InvoiceDate, format = "%m/%d/%Y"))
blogdown:::new_post_addin()
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(tidymodels)
library(skimr)
library(tibble)
library(dplyr)
library(tidyr)
library(magrittr)
vb_matches <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-19/vb_matches.csv', guess_max = 76000)
vb_matches
View(vb_matches)
View(vb_matches)
attach(vb_matches)
vb_matches %>%
transmute(
circuit,
gender,
year,
# vil to hold team med større sandynlihghed veinde for nogle fejl eller sttacks
w_attacks = w_p1_tot_attacks + w_p2_tot_attacks,
w_kills = w_p1_tot_kills + w_p2_tot_kills,
w_errors = w_p1_tot_errors + w_p2_tot_errors,
w_aces = w_p1_tot_aces + w_p2_tot_aces,
w_serve_errors = w_p1_tot_serve_errors + w_p2_tot_serve_errors,
w_blocks = w_p1_tot_blocks + w_p2_tot_blocks,
w_digs = w_p1_tot_digs + w_p2_tot_digs,
l_attacks = l_p1_tot_attacks + l_p2_tot_attacks,
l_kills = l_p1_tot_kills + l_p2_tot_kills,
l_errors = l_p1_tot_errors + l_p2_tot_errors,
l_aces = l_p1_tot_aces + l_p2_tot_aces,
l_serve_errors = l_p1_tot_serve_errors + l_p2_tot_serve_errors,
l_blocks = l_p1_tot_blocks + l_p2_tot_blocks,
l_digs = l_p1_tot_digs + l_p2_tot_digs
)
vb_parsed <- vb_matches %>%
transmute(
circuit,
gender,
year,
# vil to hold team med større sandynlihghed veinde for nogle fejl eller sttacks
w_attacks = w_p1_tot_attacks + w_p2_tot_attacks,
w_kills = w_p1_tot_kills + w_p2_tot_kills,
w_errors = w_p1_tot_errors + w_p2_tot_errors,
w_aces = w_p1_tot_aces + w_p2_tot_aces,
w_serve_errors = w_p1_tot_serve_errors + w_p2_tot_serve_errors,
w_blocks = w_p1_tot_blocks + w_p2_tot_blocks,
w_digs = w_p1_tot_digs + w_p2_tot_digs,
l_attacks = l_p1_tot_attacks + l_p2_tot_attacks,
l_kills = l_p1_tot_kills + l_p2_tot_kills,
l_errors = l_p1_tot_errors + l_p2_tot_errors,
l_aces = l_p1_tot_aces + l_p2_tot_aces,
l_serve_errors = l_p1_tot_serve_errors + l_p2_tot_serve_errors,
l_blocks = l_p1_tot_blocks + l_p2_tot_blocks,
l_digs = l_p1_tot_digs + l_p2_tot_digs
) %>%
na.omit()
install.packages(c("bookdown", "dbplyr"))
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(tidymodels)
library(skimr)
library(tibble)
library(dplyr)
library(tidyr)
library(magrittr)
devtools::install_github("tidyverse/dplyr")
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
dplyr::rename_with(~ stringr::str_remove(., "w_"), w_attacks:w_digs)
library(dplyr, warn.conflicts = FALSE)
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
dplyr::rename_with(~ stringr::str_remove(., "w_"), w_attacks:w_digs)
devtools::install_github("tidyverse/dplyr")
devtools::install_github("dplyr")
library(dplyr, warn.conflicts = FALSE)
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs)
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_if(starts_with("w_"), )
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_if(starts_with("w_"), w_attacks:w_digs)
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_if(starts_with("w_"), attacks:digs)
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_at(vars(starts_with("w_")), ~paste0("df_1", .))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_at(vars(starts_with("w_")), ~paste0("", .))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_at(~ stringr::str_remove(vars(starts_with("w_"))))
rename_at(~ stringr::str_remove((starts_with("w_")))
vb_parsed %>%
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_at(~ stringr::str_remove(starts_with("w_")))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_at(stringr::str_remove(starts_with("w_")))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_at(vars(starts_with("w_")), ~ "")
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_at(vars(starts_with("w_")), ~ "ID")
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_at(dplyr::vars(starts_with("w_")), ~ "ID")
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_if(stringr::str_detect("w_"), stringr::str_remove("w_"))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_if(stringr::str_detect(names(.),"w_"), stringr::str_remove("w_"))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_if(stringr::str_detect(names(.),"w_"), stringr::str_remove(names(.),"w_"))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_if(stringr::str_detect(w_attacks:w_digs,"w_"), stringr::str_remove(w_attacks:w_digs,"w_"))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_at(vars(starts_with("w_"), ~ stringr::str_remove("w_")))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_at(vars(starts_with("w_"), ~ stringr::str_remove(w_attacks:w_digs,"w_")))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
names() %>%
stringr::str_replace_all("w_","")
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_all(stringr::str_replace_all("w_",""))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_if(stringr::str_replace_all("w_",""))
rename_all(function(x) gsub("w_", "", x))
vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_all(function(x) gsub("w_", "", x))
losers <- vb_parsed %>%
select(circuit, gender, year,
l_attacks:l_digs) %>%
rename_all(function(x) gsub("l_", "", x))
vb_df <- bind_rows(winner,
losers) %>%
mutate_if(is.character, factor)
winner <- vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_all(function(x) gsub("w_", "", x))
winner <- vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_all(function(x) gsub("w_", "", x))
losers <- vb_parsed %>%
select(circuit, gender, year,
l_attacks:l_digs) %>%
rename_all(function(x) gsub("l_", "", x))
vb_df <- bind_rows(winner,
losers) %>%
mutate_if(is.character, factor)
winner <- vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_all(function(x) gsub("w_", "", x)) %>%
mutate(win = "win")
losers <- vb_parsed %>%
select(circuit, gender, year,
l_attacks:l_digs) %>%
rename_all(function(x) gsub("l_", "", x)) %>%
mutate(win = "lose")
vb_df <- bind_rows(winner,
losers) %>%
mutate_if(is.character, factor)
vb_df %>%  count(gender)
vb_df %>%
pivot_longer(attacks:digs, names_to = "stat", values_to = "value")
vb_df %>%
pivot_longer(attacks:digs, names_to = "stat", values_to = "value") %>%
ggplot(aes(gender, value, fill = win)) +
geom_boxplot()
library(tidyquant)
theme_tq()
vb_df %>%
pivot_longer(attacks:digs, names_to = "stat", values_to = "value") %>%
ggplot(aes(gender, value, fill = win)) +
geom_boxplot() +
theme_tq()
vb_df %>%
pivot_longer(attacks:digs, names_to = "stat", values_to = "value") %>%
ggplot(aes(gender, value, fill = win)) +
geom_boxplot() +
facet_wrap(~ stat, scales = "free_y") +
theme_tq()
vb_df %>%
pivot_longer(attacks:digs, names_to = "stat", values_to = "value") %>%
ggplot(aes(gender, value, fill = win, color = win)) +
geom_boxplot(alpha = 0.4) +
facet_wrap(~ stat, scales = "free_y", nrow = 2) +
labs(y = NULL, color = NULL, fill = NULL) +
theme_tq()
theme_set(theme_plex())
theme_set(theme_minimal())
vb_df %>%
pivot_longer(attacks:digs, names_to = "stat", values_to = "value") %>%
ggplot(aes(gender, value, fill = win, color = win)) +
geom_boxplot(alpha = 0.4) +
facet_wrap(~ stat, scales = "free_y", nrow = 2) +
labs(y = NULL, color = NULL, fill = NULL)
set.seed(123)
vb_split <- initial_split(vb_df, strata = win)
vb_split
set.seed(123)
# Split data
vb_split <- initial_split(vb_df, strata = win)
vb_train <- training(vb_split)
vb_test <- testing(vb_split)
xgb_spec <- boost_tree(
# skal håndtere en masse model parameter vi skal tune
# vi tuner ikke træet men sørger for der er nok af dem.
trees = 1000,
# hyper parameter
# de handler om model kompleksitet.
tree_depth = tune(), min_n = tune(), loss_reduction = tune(),
sample = tune(), mtry = tune(),
learn_rate = tune()
) %>%
set_engine("xgboost") %>%
set_mode("classification")
xgb_spec
xgb_grid <- grid_latin_hypercube(
tree_depth(),
min_n(),
loss_reduction(),
# sample størrelsen  er en andel
sample_size = sample_prop(),
# har en ukendt, ds vi ved ikke hvor mange data punkter.
mtry(),
learn_rate(),
size = 20
)
mtry()
xgb_grid <- grid_latin_hypercube(
tree_depth(),
min_n(),
loss_reduction(),
# sample størrelsen  er en andel
sample_size = sample_prop(),
# har en ukendt, ds vi ved  ikke hvor mange data punkter.
#
finalize(mtry(), vb_train),
learn_rate(),
size = 20
)
xgb_grid
xgb_wf <- workflow() %>%
add_formula(win~ .) %>%
add_model(xgb_spec)
xgb_wf
vb_folds <- vfold_cv(vb_train, strata = win)
vb_folds
tune_grid(
xgb_wf,
resamples = vb_folds,
grid = xgb_grid,
control = control_grid(save_pred = TRUE)
)
xbg_res <- tune_grid(
xgb_wf,
resamples = vb_folds,
grid = xgb_grid,
control = control_grid(save_pred = TRUE)
)
doParallel::registerDoParallel()
set.seed(234)
xgb_res <- tune_grid(
xgb_wf,
resamples = vb_folds,
grid = xgb_grid,
control = control_grid(save_pred = TRUE)
)
install.packages("xgboost")
doParallel::registerDoParallel()
set.seed(234)
xgb_res <- tune_grid(
xgb_wf,
resamples = vb_folds,
grid = xgb_grid,
control = control_grid(save_pred = TRUE)
)
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(tidymodels)
library(skimr)
library(tibble)
library(dplyr)
library(tidyr)
library(magrittr)
theme_set(theme_minimal())
vb_matches <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-19/vb_matches.csv', guess_max = 76000)
vb_matches
vb_parsed <- vb_matches %>%
transmute(
circuit,
gender,
year,
# vil to hold team med større sandynlihghed veinde for nogle fejl eller sttacks
w_attacks = w_p1_tot_attacks + w_p2_tot_attacks,
w_kills = w_p1_tot_kills + w_p2_tot_kills,
w_errors = w_p1_tot_errors + w_p2_tot_errors,
w_aces = w_p1_tot_aces + w_p2_tot_aces,
w_serve_errors = w_p1_tot_serve_errors + w_p2_tot_serve_errors,
w_blocks = w_p1_tot_blocks + w_p2_tot_blocks,
w_digs = w_p1_tot_digs + w_p2_tot_digs,
l_attacks = l_p1_tot_attacks + l_p2_tot_attacks,
l_kills = l_p1_tot_kills + l_p2_tot_kills,
l_errors = l_p1_tot_errors + l_p2_tot_errors,
l_aces = l_p1_tot_aces + l_p2_tot_aces,
l_serve_errors = l_p1_tot_serve_errors + l_p2_tot_serve_errors,
l_blocks = l_p1_tot_blocks + l_p2_tot_blocks,
l_digs = l_p1_tot_digs + l_p2_tot_digs
) %>%
na.omit()
library(dplyr, warn.conflicts = FALSE)
winner <- vb_parsed %>%
select(circuit, gender, year,
w_attacks:w_digs) %>%
rename_all(function(x) gsub("w_", "", x)) %>%
mutate(win = "win")
losers <- vb_parsed %>%
select(circuit, gender, year,
l_attacks:l_digs) %>%
rename_all(function(x) gsub("l_", "", x)) %>%
mutate(win = "lose")
vb_df <- bind_rows(winner,
losers) %>%
mutate_if(is.character, factor)
vb_df %>%  count(gender)
library(tidyquant)
vb_df %>%
pivot_longer(attacks:digs, names_to = "stat", values_to = "value") %>%
ggplot(aes(gender, value, fill = win, color = win)) +
geom_boxplot(alpha = 0.4) +
facet_wrap(~ stat, scales = "free_y", nrow = 2) +
labs(y = NULL, color = NULL, fill = NULL)
set.seed(123)
# Split data
vb_split <- initial_split(vb_df, strata = win)
vb_train <- training(vb_split)
vb_test <- testing(vb_split)
xgb_spec <- boost_tree(
# skal håndtere en masse model parameter vi skal tune
# vi tuner ikke træet men sørger for der er nok af dem.
trees = 1000,
# hyper parameter
# de handler om model kompleksitet.
tree_depth = tune(), min_n = tune(), loss_reduction = tune(),
sample = tune(), mtry = tune(),
learn_rate = tune()
) %>%
set_engine("xgboost") %>%
set_mode("classification")
xgb_spec
xgb_grid <- grid_latin_hypercube(
tree_depth(),
min_n(),
loss_reduction(),
# sample størrelsen  er en andel
sample_size = sample_prop(),
# har en ukendt, ds vi ved  ikke hvor mange data punkter.
#
finalize(mtry(), vb_train),
learn_rate(),
size = 20
)
xgb_grid
xgb_wf <- workflow() %>%
add_formula(win~ .) %>%
add_model(xgb_spec)
xgb_wf
set.seed(123)
vb_folds <- vfold_cv(vb_train, strata = win)
vb_folds
doParallel::registerDoParallel()
set.seed(234)
xgb_res <- tune_grid(
xgb_wf,
resamples = vb_folds,
grid = xgb_grid,
control = control_grid(save_pred = TRUE)
)
sessionInfo()
sessionInfo(rlang)
sessionInfo()
sessionInfo()
install.packages("rlang")
install.packages("rlang")
sessionInfo()
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(tidymodels)
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(tidymodels)
install.packages("tidymodels")
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(tidymodels)
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(tidymodels)
install.packages("rlang")
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(tidymodels)
