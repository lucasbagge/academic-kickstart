blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::new_post()
blogdown:::new_post_addin()
blogdown::stop_server()
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(scales)
library(tidyverse)
library(quantmod)
library(tidymodels)
library(tidymodels)
```
library(dplyr)
ng <- getSymbols(
"NG",
auto.assign = FALSE
)
head(ng)
tail(ng)
barChart(ng)
ng_close <- Cl(ng)
ng_close_month <- apply.monthly(ng_close)
ng_close_month <- apply.monthly(ng_close, mean)
plot(ng_close_month)
library(ggplot2)
ng_close_month_tidy <- tidy(ng_close_month)
View(ng_close_month_tidy)
ng_close_month_tidy %>%
ggplot(
aes(
x = index
)
) +
geom_histogram(
aes(
y = value
),
color = "black",
fill = "white"
) +
geom_density(
alpha = 0.2,
fill = "#FF6666"
)
ng_close_month_tidy %>%
ggplot(
aes(
x = index
)
) +
geom_histogram(
aes(
y = ..value..
),
color = "black",
fill = "white"
) +
geom_density(
alpha = 0.2,
fill = "#FF6666"
)
ng_close_month_tidy %>%
ggplot(
aes(
x = index
)
) +
geom_histogram(
aes(
y = ..density..
),
color = "black",
fill = "white"
) +
geom_density(
alpha = 0.2,
fill = "#FF6666"
)
ng_close_month_tidy %>%
ggplot(
aes(
x = value
)
) +
geom_histogram(
aes(
y = ..density..
),
color = "black",
fill = "white"
) +
geom_density(
alpha = 0.2,
fill = "#FF6666"
)
ng_close_month_tidy %>%
ggplot(
aes(
x = value
)
) +
geom_histogram(
aes(
y = ..density..
),
color = "black",
fill = "white"
) +
geom_density(
alpha = 0.2,
fill = "#FF6666"
) +
theme_minimal()
ng_close_month_tidy %>%
ggplot(
aes(
x = value
)
) +
geom_histogram(
aes(
y = ..density..
),
color = "black",
fill = "white"
) +
geom_density(
alpha = 0.2,
fill = "#FF6666"
) +
scale_color_brewer(
palette = "Accent"
)
ng_close_month_tidy %>%
ggplot(
aes(
x = value
)
) +
geom_histogram(
aes(
y = ..density..
),
color = "black",
fill = "white"
) +
geom_density(
alpha = 0.2,
fill = "#FF6666"
) +
scale_color_brewer(
palette = "Accent"
) +
theme_minimal()
ng_close_month_tidy %>%
ggplot(
aes(
x = value
)
) +
geom_histogram(
aes(
y = ..density..
),
color = "black",
fill = "white"
) +
geom_density(
alpha = 0.2,
fill = "#FF6666"
) +
scale_color_brewer(
palette = "Accent"
) +
theme_minimal() +
labs(title = "Weight density curve",
x = "Price",
y = "Density")
ng_close_month_tidy %>%
ggplot(
aes(
x = value
)
) +
geom_histogram(
aes(
y = ..density..
),
color = "black",
fill = "white"
) +
geom_density(
alpha = 0.2,
fill = "#FF6666"
) +
scale_color_brewer(
palette = "Accent"
) +
theme_pubclean() +
labs(title = "Weight density curve",
x = "Price",
y = "Density")
install.packages("ggpubr")
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(scales)
library(tidyverse)
library(quantmod)
library(tidymodels)
library(magrittr)
library(dplyr)
library(ggplot2)
library(pubr)
library(knitr)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE, message = FALSE,
echo = TRUE, dpi = 300, cache.lazy = FALSE,
tidy = "styler", fig.width = 8, fig.height = 5)
library(scales)
library(tidyverse)
library(quantmod)
library(tidymodels)
library(magrittr)
library(dplyr)
library(ggplot2)
library(pubr)
library(ggpubr)
ng_close_month_tidy %>%
ggplot(
aes(
x = value
)
) +
geom_histogram(
aes(
y = ..density..
),
position = 'identity', binwidth = 1,
colour = "black", fill = "turquoise", alpha = 0.6
) +
geom_density(
alpha = 0.6,
fill = "#FF6666"
) +
scale_color_brewer(
palette = "Accent"
) +
theme_pubclean() +
labs(title = "Weight density curve",
x = "Price",
y = "Density")
ng_close_month_tidy %>%
ggplot(
aes(
x = value
)
) +
geom_histogram(
aes(
y = ..density..
),
position = 'identity',
binwidth = 1,
colour = "black",
fill = "turquoise",
alpha = 0.6
) +
geom_density(
alpha = 0.6,
fill = "#FF6666"
) +
scale_color_brewer(
palette = "Accent"
) +
theme_pubclean() +
labs(title = "Weight density curve",
x = "Price",
y = "Density")
ng_close_month_tidy %>%
ggplot(
aes(
x = value
)
) +
geom_histogram(
aes(
y = ..density..
),
position = 'identity',
binwidth = 1,
colour = "black",
fill = "turquoise",
alpha = 0.6
) +
geom_density(
alpha = 0.6,
fill = "#FF6666"
) +
scale_color_brewer(
palette = "Accent"
) +
theme_pubr() +
labs(title = "Weight density curve",
x = "Price",
y = "Density")
ng_close_month_tidy %>%
ggplot(
aes(
x = value
)
) +
geom_histogram(
aes(
y = ..density..
),
position = 'identity',
binwidth = 1,
colour = "black",
fill = "turquoise",
alpha = 0.6
) +
geom_density(
alpha = 0.6,
fill = "#FF6666"
) +
scale_color_brewer(
palette = "Accent"
) +
theme_pubclean() +
labs(title = "Weight density curve",
x = "Price",
y = "Density")
ng_close_month_tidy %>%
ggqqplot(
x = "value",
palette = "#FC4E07",
ggtheme = theme_pubclean()
)
library(forcats)
library(forecast)
install.packages("forecast")
library(forecast)
ng_close_month_tidy %>%
ggtsdisplay(
plot.type = "partial",
main = "ACF, PACF for Natural Gas",
smooth = TRUE
)
ng_close_month_tidy %>%
select(index, value)
ng_close_month_tidy %>%
select(index, value) %>%
ggtsdisplay(
plot.type = "partial",
main = "ACF, PACF for Natural Gas",
smooth = TRUE
)
library(scales)
date_breaks = '5 years',
color = "indianred3",
ng_close_month_tidy %>%
ggplot(
aes(
x = index,
y = value)) +
geom_line(
color = "indianred3",
size = 1) +
geom_smooth() +
labs(title = "Natural Gas",
subtitle = "2000 to 2020",
x = "",
y = "Close price") +
theme_minimal()
ggplot.corr <- function(data, lag.max = 24, ci = 0.95, large.sample.size = TRUE, horizontal = TRUE,...) {
require(ggplot2)
require(dplyr)
require(cowplot)
if(horizontal == TRUE) {numofrow <- 1} else {numofrow <- 2}
list.acf <- acf(data, lag.max = lag.max, type = "correlation", plot = FALSE)
N <- as.numeric(list.acf$n.used)
df1 <- data.frame(lag = list.acf$lag, acf = list.acf$acf)
df1$lag.acf <- dplyr::lag(df1$acf, default = 0)
df1$lag.acf[2] <- 0
df1$lag.acf.cumsum <- cumsum((df1$lag.acf)^2)
df1$acfstd <- sqrt(1/N * (1 + 2 * df1$lag.acf.cumsum))
df1$acfstd[1] <- 0
df1 <- select(df1, lag, acf, acfstd)
list.pacf <- acf(data, lag.max = lag.max, type = "partial", plot = FALSE)
df2 <- data.frame(lag = list.pacf$lag,pacf = list.pacf$acf)
df2$pacfstd <- sqrt(1/N)
if(large.sample.size == TRUE) {
plot.acf <- ggplot(data = df1, aes( x = lag, y = acf)) +
geom_area(aes(x = lag, y = qnorm((1+ci)/2)*acfstd), fill = "#B9CFE7") +
geom_area(aes(x = lag, y = -qnorm((1+ci)/2)*acfstd), fill = "#B9CFE7") +
geom_col(fill = "#4373B6", width = 0.7) +
scale_x_continuous(breaks = seq(0,max(df1$lag),6)) +
scale_y_continuous(name = element_blank(),
limits = c(min(df1$acf,df2$pacf),1)) +
ggtitle("ACF") +
theme_bw()
plot.pacf <- ggplot(data = df2, aes(x = lag, y = pacf)) +
geom_area(aes(x = lag, y = qnorm((1+ci)/2)*pacfstd), fill = "#B9CFE7") +
geom_area(aes(x = lag, y = -qnorm((1+ci)/2)*pacfstd), fill = "#B9CFE7") +
geom_col(fill = "#4373B6", width = 0.7) +
scale_x_continuous(breaks = seq(0,max(df2$lag, na.rm = TRUE),6)) +
scale_y_continuous(name = element_blank(),
limits = c(min(df1$acf,df2$pacf),1)) +
ggtitle("PACF") +
theme_bw()
}
else {
plot.acf <- ggplot(data = df1, aes( x = lag, y = acf)) +
geom_col(fill = "#4373B6", width = 0.7) +
geom_hline(yintercept = qnorm((1+ci)/2)/sqrt(N),
colour = "sandybrown",
linetype = "dashed") +
geom_hline(yintercept = - qnorm((1+ci)/2)/sqrt(N),
colour = "sandybrown",
linetype = "dashed") +
scale_x_continuous(breaks = seq(0,max(df1$lag),6)) +
scale_y_continuous(name = element_blank(),
limits = c(min(df1$acf,df2$pacf),1)) +
ggtitle("ACF") +
theme_bw()
plot.pacf <- ggplot(data = df2, aes(x = lag, y = pacf)) +
geom_col(fill = "#4373B6", width = 0.7) +
geom_hline(yintercept = qnorm((1+ci)/2)/sqrt(N),
colour = "sandybrown",
linetype = "dashed") +
geom_hline(yintercept = - qnorm((1+ci)/2)/sqrt(N),
colour = "sandybrown",
linetype = "dashed") +
scale_x_continuous(breaks = seq(0,max(df2$lag, na.rm = TRUE),6)) +
scale_y_continuous(name = element_blank(),
limits = c(min(df1$acf,df2$pacf),1)) +
ggtitle("PACF") +
theme_bw()
}
cowplot::plot_grid(plot.acf, plot.pacf, nrow = numofrow)
}
ggplot.corr(data = ng_close_month_tidy)
ggplot.corr(data = ts(ng_close_month_tidy))
ng_close_month_ts = ts(ng_close_month)
ggplot.corr(data = ts(ng_close_month_tidy))
ng_close_month_ts = ts(ng_close_month)
ng_close_month_ts
ng_close_month_ts = ts(ng_close_month$NG.Close,
start = c(2007, 1),
end = c(2020, 5),
frequency = 12)
ggplot.corr(data = ts(ng_close_month_tidy))
ng_close_month_ts = ts(ng_close_month$NG.Close,
start = c(2007, 1),
end = c(2020, 5),
frequency = 12)
ggplot.corr(data = ts(ng_close_month_tidy))
ggplot.corr(data = ng_close_month_ts,
lag.max = 24,
ci = 0.95,
large.sample.size = FALSE,
horizontal = TRUE)
ggplot.corr(data = ng_close_month_ts,
lag.max = 24,
ci = 0.95,
large.sample.size = TRUE,
horizontal = TRUE)
ggplot.corr(data = ng_close_month_ts,
lag.max = 10,
ci = 0.95,
large.sample.size = TRUE,
horizontal = TRUE)
?adf.test
library(tseries)
adf.test(ng_close_month_ts)
adf.test(ng_close_month_ts) %>%
kable()
pp.test(ng_close_month_ts)
kpss.test(ng_close_month_ts)
adf.test(ng_close_month_ts)
ptibble <- tibble(
"Test", "P-vluea" ~
"ADF", 0.5116
)
ptibble <- tibble(
"Test", "P-value",
"ADF", 0.5116
)
ptibble
ptibble <- tibble(
~ "Test", "P-value",
"ADF", 0.5116
)
